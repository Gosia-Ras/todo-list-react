{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","addNewTask","useState","newTaskContent","setNewTaskContent","className","onSubmit","event","preventDefault","trim","value","type","placeholder","onChange","target","disabled","Tasks","tasks","hideDone","removeTask","toggleTaskDone","map","task","done","onClick","id","content","Buttons","toggleHideDone","setAllDone","length","some","every","Section","title","body","extraHeaderContent","Header","Container","children","App","setHideDone","setTasks","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.714ea038.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = ({addNewTask}) => {\r\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n  const onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    addNewTask(newTaskContent.trim());\r\n    setNewTaskContent(\"\");\r\n  }\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onFormSubmit}>\r\n      <input\r\n        value={newTaskContent}\r\n        className=\"form__text\"\r\n        type=\"text\"\r\n        placeholder=\"What do you have to do?\"\r\n        onChange={({ target} ) => setNewTaskContent(target.value)}\r\n      />\r\n      <button \r\n        className=\"button button--add\"\r\n        disabled={newTaskContent.trim() === \"\"}\r\n      >\r\n        Add new task</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDone, removeTask, toggleTaskDone }) => (\r\n  <ul className=\"list\">\r\n    {tasks.map((task) => (\r\n      <li\r\n        key={task.id}\r\n        className={`list__item${\r\n          task.done & hideDone ? \" list__item--hidden\" : \"\"\r\n        }`}\r\n      >\r\n        <button \r\n          className=\"button button__list button__list--done\"\r\n          onClick={() => toggleTaskDone(task.id)}\r\n        >\r\n          {task.done ? \"âœ”\" : \" \"}\r\n        </button>\r\n        <span className={`list__span${task.done ? \" list__span--done\" : \"\"}`}>\r\n          {task.content}\r\n        </span>\r\n        <button \r\n          className=\"button button__list button__list--remove\"\r\n          onClick={() => removeTask(task.id)}\r\n        >\r\n          ðŸ—‘\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Tasks;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDone, toggleHideDone, setAllDone }) => (\r\n    tasks.length > 0 && (\r\n        <div className=\"section__buttonsContainer\">\r\n            {tasks.length > 0 && (\r\n                <>\r\n                    <button \r\n                        onClick={toggleHideDone} \r\n                        className={`button button--section`}\r\n                        disabled={!tasks.some(({ done }) => done)}\r\n                    >\r\n                    {hideDone ? \"Show\" : \"Hide\"} finished tasks\r\n                    </button>\r\n                    <button \r\n                        onClick={setAllDone}\r\n                        className=\"button button--section\"\r\n                        disabled={tasks.every(({ done }) => done)}\r\n                    >\r\n                        Mark all done\r\n                    </button>\r\n                </>\r\n            )}\r\n        </div >\r\n    )\r\n);\r\n\r\nexport default Buttons","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n  <section className=\"section\">\r\n    <div className=\"section__layout\">\r\n      <h2>{title}</h2>\r\n      {extraHeaderContent}\r\n    </div>\r\n    <div className=\"section__body\">{body}</div>\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\n\r\nconst Header = ({ title }) => (\r\n  <header>\r\n    <h1>{title}</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\nexport default Container;","import React, { useState } from \"react\";\r\nimport Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Header from \"./Header\";\r\nimport Container from \"./Container\";\r\n\r\nfunction App() {\r\n  const [hideDone, setHideDone] = useState(false);\r\n  const [tasks, setTasks] = useState([\r\n    { id: 1, content: \"Switch to React.js\", done: true },\r\n    { id: 2, content: \"Do groceries\", done: false },\r\n  ]);\r\n\r\n  const toggleHideDone = () => {\r\n    setHideDone((hideDone) => !hideDone);\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    setTasks(tasks => tasks.filter(task => task.id !== id));\r\n  }\r\n\r\n  const toggleTaskDone = (id) => {\r\n    setTasks(tasks => tasks.map(task => {\r\n      if(task.id === id) {\r\n        return { ...task, done: !task.done };  \r\n      }\r\n\r\n      return task;\r\n    }));\r\n  }\r\n\r\n  const setAllDone = () => {\r\n    setTasks(tasks => tasks.map(task => ({ \r\n      ...task, \r\n      done: true,\r\n     })));\r\n  };\r\n\r\n  const addNewTask = (content) => {\r\n    setTasks(tasks => [\r\n      ...tasks, \r\n      {\r\n        content,\r\n        done: false,\r\n        id: tasks.length ? tasks[tasks.length - 1].id + 1 : 1,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header title=\"To-Do List\" />\r\n      <Section title=\"Add new task\" body={\r\n      <Form addNewTask={addNewTask} />\r\n      } />\r\n      <Section\r\n        title=\"Task list\"\r\n        body={\r\n          <Tasks \r\n            tasks={tasks} \r\n            hideDone={hideDone} \r\n            removeTask={removeTask}\r\n            toggleTaskDone={toggleTaskDone} \r\n          />\r\n        }\r\n        extraHeaderContent={\r\n          <Buttons\r\n            tasks={tasks}\r\n            hideDone={hideDone}\r\n            toggleHideDone={toggleHideDone}\r\n            setAllDone={setAllDone}\r\n          />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}