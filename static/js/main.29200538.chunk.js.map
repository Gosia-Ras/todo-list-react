{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","type","placeholder","Tasks","tasks","hideAllDone","map","task","done","content","Buttons","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","id","App","hideDoneTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAUeA,EAPF,kBACT,uBAAMC,UAAU,eAAhB,UACQ,uBAAOA,UAAU,aAAaC,KAAK,OAAOC,YAAY,4BACtD,wBAAQF,UAAU,qBAAlB,8BCgBGG,G,MAnBD,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,YAAT,OACV,oBAAIL,UAAU,OAAd,SACCI,EAAME,KAAI,SAAAC,GAAI,OACX,cADiB,CACjB,MACAP,UAAS,oBAAeO,EAAKC,KAAOH,EAAc,oBAAsB,IADxE,UAEK,wBAAQL,UAAU,yCAAlB,SACYO,EAAKC,KAAO,SAAM,MAEtB,sBAAMR,UAAS,oBAAeO,EAAKC,KAAO,oBAAsB,IAAhE,SACID,EAAKE,UAEV,wBAAQT,UAAU,2CAAlB,oCCULU,G,MArBC,SAAC,GAAD,IAAGN,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OACZD,EAAMO,OAAS,GACX,qBAAKX,UAAU,4BAAf,SACKI,EAAMO,OAAS,GACZ,qCACI,yBAAQX,UAAS,oFAAjB,UAECK,EAAc,OAAS,OAFxB,qBAIA,wBACIL,UAAU,yBACVY,SAAUR,EAAMS,OAAM,qBAAGL,QAF7B,kCCGLM,G,MAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,mBAAhB,OACZ,0BAASjB,UAAU,UAAnB,UACI,sBAAKA,UAAU,kBAAf,UACI,oBAAIA,UAAU,kBAAd,SAAiCe,IAChCE,KAEL,qBAAKjB,UAAU,gBAAf,SACKgB,SCFEE,EANA,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAH,OACX,iCACI,oBAAIf,UAAU,eAAd,SAA8Be,OCIvBI,G,MALG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,sBAAMpB,UAAU,YAAhB,SACKoB,MCGHhB,EAAQ,CACZ,CAAEiB,GAAI,EAAGZ,QAAS,iCAAkCD,MAAM,GAAQ,CAAEa,GAAI,EAAGZ,QAAS,eAAgBD,MAAM,IA2B7Fc,MAtBf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAQP,MAAM,eACd,cAAC,EAAD,CACEA,MAAM,eACNC,KAAM,cAAC,EAAD,MAGR,cAAC,EAAD,CACED,MAAM,YACNC,KACE,cAAC,EAAD,CAAOZ,MAAOA,EAAOmB,cAdT,QAgBdN,mBACE,cAAC,EAAD,CAASb,MAAOA,EAAOmB,cAjBX,cCAPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.29200538.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Form = () => (\r\n    <form className=\"form js-form\">\r\n            <input className=\"form__text\" type=\"text\" placeholder=\"What do you have to do?\" />\r\n            <button className=\"button button--add\">Click to add</button>\r\n          </form>\r\n)\r\n\r\nexport default Form;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Tasks = ({tasks, hideAllDone}) => (\r\n    <ul className=\"list\">\r\n    {tasks.map(task => ( //key={task.id} add to each element, see in lesson\r\n        <li\r\n        className={`list__item${task.done & hideAllDone ? \" list__item--hide\" : \"\"}`}> \r\n             <button className=\"button button__list button__list--done\">\r\n                        {task.done ? \"âœ”\" : \" \"}\r\n                    </button>\r\n                     <span className={`list__span${task.done ? \" list__span--done\" : \"\"}`}>\r\n                        {task.content}\r\n                    </span>\r\n                    <button className=\"button button__list button__list--remove\">\r\n                        ðŸ—‘\r\n                    </button>\r\n        </li> //className hidden doesn't get added\r\n    ))}\r\n    </ul>\r\n);\r\n\r\nexport default Tasks;","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideAllDone }) => (\r\n    tasks.length > 0 && (\r\n        <div className=\"section__buttonsContainer\">\r\n            {tasks.length > 0 && (\r\n                <>\r\n                    <button className={`button button--section $     {tasks.every(({ done }) => !done) ? \"disabled\" : \"\"}`}\r\n                    >\r\n                    {hideAllDone ? \"Show\" : \"Hide\"} finished tasks\r\n                    </button>\r\n                    <button \r\n                        className=\"button button--section\"\r\n                        disabled={tasks.every(({ done }) => done)}\r\n                    >\r\n                        Mark all done\r\n                    </button>\r\n                </>\r\n            )}\r\n        </div >\r\n    )\r\n);\r\n\r\nexport default Buttons","import React from 'react';\r\nimport \"./style.css\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <section className=\"section\">\r\n        <div className=\"section__layout\">\r\n            <h2 className=\"section__header\">{title}</h2>\r\n            {extraHeaderContent}\r\n        </div>\r\n        <div className=\"section__body\">\r\n            {body}\r\n        </div>\r\n    </section>\r\n)\r\n\r\nexport default Section;","import React from 'react';\r\n\r\nconst Header = ({ title }) => (\r\n    <header>\r\n        <h1 className=\"body__header\">{title}</h1>\r\n      </header>\r\n);\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\nexport default Container;","import React from 'react';\nimport Form from \"./Form\";\nimport Tasks from \"./Tasks\";\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nconst tasks = [\n  { id: 1, content: \"Transfer task-list to React.js\", done: true }, { id: 2, content: \"Do groceries\", done: false },\n];\n\nconst hideDoneTasks = false;\n\nfunction App() {\n  return (\n    <Container>\n      <Header title=\"To-Do List\" />\n      <Section\n        title=\"Add new task\"\n        body={<Form />}\n      />\n\n      <Section\n        title=\"Task list\"\n        body={\n          <Tasks tasks={tasks} hideDoneTasks={hideDoneTasks} />\n        }\n        extraHeaderContent={\n          <Buttons tasks={tasks} hideDoneTasks={hideDoneTasks} />\n        }\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}